1: FUNCTION fact :
2: PARAM v1
3: IF v1 == #1 GOTO label1
4: GOTO label2
5: LABEL label1 :
6: RETURN v1
8: LABEL label2 :
9: t7 := v1 - #1
10: ARG t7
11: t6 := CALL fact
12: t4 := v1 * t6
13: RETURN t4
14: LABEL label3 :
15: 
16: FUNCTION main :
17: READ t10
18: v2 := t10
19: IF v2 > #1 GOTO label4
20: GOTO label5
21: LABEL label4 :
22: ARG v2
23: v3 := CALL fact
25: GOTO label6
26: LABEL label5 :
27: v3 := #1
28: LABEL label6 :
29: WRITE v3
30: RETURN #0
31: 
block
FUNCTION fact :
PARAM v1(3)
IF v1(4) == #1 GOTO label1

block
GOTO label2

block
LABEL label1 :
RETURN v1(8)

block
LABEL label2 :
t7(10) := v1(12) - #1
ARG t7(-1)
t6(12) := CALL fact
t4(13) := v1(14) * t6(-1)
RETURN t4(-1)

block
LABEL label3 :


block
FUNCTION main :
READ t10(18)
v2(19) := t10(-1)
IF v2(20) > #1 GOTO label4

block
GOTO label5

block
LABEL label4 :
ARG v2(26)
v3(26) := CALL fact
GOTO label6

block
LABEL label5 :
v3(28) := #1

block
LABEL label6 :
WRITE v3(30)
RETURN #0


----------------------free 8



----------------------free 8
here
----------------------free 9
----------------------free 8


----------------------free 8
----------------------free 8


here



fact:
  li $t0, 1
  beq $a0, $t0, label1
  j label2
label1:
  move $v0, $a0
  jr $ra
label2:
  li $t0, 1
  sub $t1, $a0, $t0
  move $a0, $t1
  addi $sp, $sp, -4
  sw $ra, 0($sp)
  jal fact
  lw $ra, 0($sp)
  addi $sp, $sp, 4
  move $t0, $v0
  mul $t1, $a0, $t0
  move $v0, $t1
  jr $ra
label3:
  
main:
  addi $sp, $sp, -4
  sw $ra, 0($sp)
  jal read
  lw $ra, 0($sp)
  addi $sp, $sp, 4
  move $t0, $v0
  move $t2, $t0
  li $t0, 1
  bgt $t2, $t0, label4
  j label5
label4:
  move $a0, $t2
  addi $sp, $sp, -4
  sw $ra, 0($sp)
  jal fact
  lw $ra, 0($sp)
  addi $sp, $sp, 4
  move $t0, $v0
  j label6
label5:
  li $t0, 1
label6:
  move $a0, $t0
  addi $sp, $sp, -4
  sw $ra, 0($sp)
  jal write
  lw $ra, 0($sp)
  addi $sp, $sp, 4
  li $v0, 0
  jr $ra
  
read:
  li $v0, 4
  la $a0, _prompt
  syscall
  li $v0, 5
  syscall
  jr $ra
  
write:
  li $v0, 1
  syscall
  li $v0, 4
  la $a0, _ret
  syscall
  move $v0, $zero
  jr $ra
  
